name: CICD
on: [workflow_dispatch]
jobs:
  docker-install-and-preliminar-config:
    runs-on: ubuntu-20.04

    steps:
      - name: Clone test-app repo
        uses: actions/checkout@v3        

      - run: |
          sudo apt update -y
          sudo apt install git -y
          sudo mkdir /home/runner/app_content
          sudo chmod 755 /home/runner/app_content
          echo ''
          sudo cp ./Dockerfile /home/runner/app_content/Dockerfile
          sudo ls /home/runner/app_content/
          #Install ansible
          sudo apt install ansible -y
          sudo ls /home/runner/work/DevOps-Interview-AC/DevOps-Interview-AC/Infrastructure/conf_mgmt_ansible/playbooks
          sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable" -y
          sudo apt-cache policy docker-ce
          sudo apt install docker-ce -y
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # build-and-push:
  #   needs: docker-install-and-preliminar-config
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v2

  #     - uses: vitr/actions-build-and-upload-to-ecs@master      
  #       with:
  #         access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         account_id: ${{ secrets.AWS_ACCOUNT_ID }}
  #         repo: main-applications-registry
  #         region: us-east-1
  #         tags: latest,${{ github.sha }}
  #         create_repo: true
  #     - run: sudo docker build --no-cache -t test-app /home/runner/app_content/.
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    # needs: build-and-push
    needs: docker-install-and-preliminar-config
    runs-on: ubuntu-20.04  
    steps:          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - run: |
          aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          sudo docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/main-applications-registry:latest
          sudo docker images
          sudo docker run -d -p 80:80 --name main-applications-registry ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/main-applications-registry
          curl localhost:80
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


          
        
