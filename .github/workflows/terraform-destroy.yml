name: TERRAFORM-DESTROY
on: [workflow_dispatch]
env:
  # verbosity setting for Terraform logs
  TF_LOG: INFO
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:

  terraform-destroy:
    name: Terrafrom destroy of infrastructure
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: '/home/runner/work/DevOps-Interview-AC/DevOps-Interview-AC/Infrastructure/conf_terraform'

    steps:

    - name: Checkout Repo
      uses: actions/checkout@v3

    - uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      id: init
      run: terraform -chdir=$WORKING_DIRECTORY init -input=false -reconfigure; sudo ls -la /home/runner/work/DevOps-Interview-AC/DevOps-Interview-AC/Infrastructure/conf_terraform;pwd
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
    - name: Terraform State
      id: Avoid_destroying_S3_tfstates_bucket
      run: terraform -chdir=$WORKING_DIRECTORY state rm aws_s3_bucket.s3Bucket
      continue-on-error: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Terraform Destroy
      id: Destroy
      run: terraform -chdir=$WORKING_DIRECTORY destroy -auto-approve; sudo ls -la /home/runner/work/DevOps-Interview-AC/DevOps-Interview-AC/Infrastructure/conf_terraform
      continue-on-error: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Sync S3
      uses: jakejarvis/s3-sync-action@master
      env:
        AWS_REGION: 'us-east-1'
        AWS_S3_BUCKET: 'terraform-resources-test'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

